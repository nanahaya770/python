{"name": "test_calculator", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ee3bc9025281a350f392ed461ba9f5c1\")>\n\n    def test_calculator(driver: WebDriver) -> None:\n        \"\"\"\n        Функция создает объект calculator_page, открывает стр.,\n        устанавливает паузу, производит расчет, проверяет результат.\n        \"\"\"\n        calculator_page = CalculatorPage(driver)\n        calculator_page.open()\n        calculator_page.set_delay()\n        calculator_page.do_calc()\n>       assert calculator_page.expected_result()\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntest_01_calc_page_obj.py:38: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\CalculatorPage.py:37: in expected_result\n    waiter.until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"ee3bc9025281a350f392ed461ba9f5c1\")>\nmethod = <function text_to_be_present_in_element.<locals>._predicate at 0x0000020ED09DF100>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n..\\venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException"}, "description": "\nФункция создает объект calculator_page, открывает стр.,\nустанавливает паузу, производит расчет, проверяет результат.\n", "attachments": [{"name": "stdout", "source": "c1309b12-b459-4db5-b343-1f1f33294a93-attachment.txt", "type": "text/plain"}], "start": 1753289842402, "stop": 1753289888925, "uuid": "5d6b18c9-b7d8-481a-ba17-971cb5db97cc", "historyId": "ac09821dffd9f327b1c9987ae2c67499", "testCaseId": "ac09821dffd9f327b1c9987ae2c67499", "fullName": "test_01_calc_page_obj#test_calculator", "labels": [{"name": "suite", "value": "test_01_calc_page_obj"}, {"name": "host", "value": "DESKTOP-TBQ4FH4"}, {"name": "thread", "value": "73856-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_01_calc_page_obj"}], "titlePath": ["test_01_calc_page_obj.py"]}